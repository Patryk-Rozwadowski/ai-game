{"version":3,"sources":["View/Settings.view.js","utils/getRandomNumber.util.js","Models/Player.model.js"],"names":["canvas","document","getElementById","width","window","innerWidth","height","innerHeight","Settings","gameContainer","canvasWidth","canvasHeight","ctx","getContext","getRandomNumber","len","Math","floor","random","Player","dna","newGenes","ball","id","lifeSpan","x","creatingGenes","y","x_step","color","changeColor","dead","index","lifes","score","ballHit","fitness","distanceFromBall","deathPenalty","abs","ROOF","y_speed","ballRadius","RIGHT_WALL","x_speed","LEFT_WALL","GROUND","calcFitness","beginPath","rect","fill","closePath","fillStyle","moveTo","lineTo","strokeStyle","stroke","genes","left","right","red","green","blue","key","drawPlayer","start","player_collision","walls_collision","think"],"mappings":"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","file":"Player.model.4427dac8.js","sourceRoot":"..","sourcesContent":["\r\nconst canvas = document.getElementById('gameContainer');\r\ncanvas.width = window.innerWidth;\r\ncanvas.height = window.innerHeight;\r\nexport const Settings = {\r\n  gameContainer: document.getElementById('gameContainer'),\r\n  canvasWidth: canvas.width,\r\n  canvasHeight: canvas.height,\r\n  ctx: canvas.getContext('2d')\r\n};","export const getRandomNumber = len => Math.floor(Math.random() * len);","import {Settings} from '../View/Settings.view';\r\nimport {getRandomNumber} from '../utils/getRandomNumber.util';\r\n\r\nconst {canvasWidth, canvasHeight} = Settings;\r\nclass Player {\r\n  constructor(dna, newGenes, ball) {\r\n\r\n    this.id = getRandomNumber(1);\r\n    this.lifeSpan = 2900;\r\n    if (newGenes) {\r\n      this.dna = dna;\r\n      this.newGenes = true;\r\n      this.x = 400;\r\n    } else {\r\n      this.dna = dna;\r\n      this.dna.creatingGenes(this.lifeSpan);\r\n      this.newGenes = false;\r\n      this.x = Math.floor(Math.random() * canvasWidth);\r\n    }\r\n\r\n    this.y = Settings.canvasHeight - 25;\r\n    this.x_step = 25;\r\n    this.height = 15;\r\n    this.width = canvasWidth / 6;\r\n    this.color = this.changeColor();\r\n\r\n    this.dead = false;\r\n    this.ball = ball;\r\n    this.index = 0;\r\n    this.lifes = 1;\r\n    this.score = 0;\r\n    this.ballHit = 0;\r\n    this.fitness = 0;\r\n    this.distanceFromBall = 0;\r\n    this.deathPenalty = 0;\r\n  }\r\n\r\n  calcFitness() {\r\n    this.distanceFromBall = Math.abs(this.distanceFromBall);\r\n    this.fitness = (this.score * this.ballHit) / this.deathPenalty + this.distanceFromBall;\r\n  }\r\n\r\n  walls_collision() {\r\n    const ROOF = this.ball.y + this.ball.y_speed - this.ball.ballRadius < 0;\r\n    const RIGHT_WALL = this.ball.x + this.ball.x_speed + this.ball.ballRadius > canvasWidth;\r\n    const LEFT_WALL = this.ball.x + this.ball.x_speed - this.ball.ballRadius < 0;\r\n    const GROUND = this.ball.y + this.ball.y_speed + this.ball.ballRadius > canvasHeight;\r\n\r\n    switch (true) {\r\n      case ROOF:\r\n        this.ball.y_speed = -this.ball.y_speed;\r\n        break;\r\n\r\n      case LEFT_WALL:\r\n        this.ball.x_speed = -this.ball.x_speed;\r\n        break;\r\n\r\n      case RIGHT_WALL:\r\n        this.ball.x_speed = -this.ball.x_speed;\r\n        break;\r\n\r\n      case GROUND:\r\n        this.ball.y_speed = -this.ball.y_speed;\r\n        this.lifes -= 1;\r\n        if (this.lifes === 0) {\r\n          this.dead = true;\r\n          this.calcFitness();\r\n        }\r\n    }\r\n  }\r\n\r\n  player_collision() {\r\n    if (this.ball.y + this.ball.y_speed + this.ball.ballRadius >= this.y + this.height\r\n        && this.ball.x + this.ball.ballRadius < this.x + this.width\r\n        && this.x < this.ball.x + this.ball.ballRadius) {\r\n      this.ball.y_speed = -this.ball.y_speed;\r\n      this.ballHit++;\r\n    }\r\n  }\r\n\r\n  drawPlayer() {\r\n    const {ctx} = Settings;\r\n    ctx.beginPath();\r\n    ctx.rect(this.x, canvasHeight - this.height, this.width, this.height);\r\n    ctx.fill();\r\n    ctx.closePath();\r\n    ctx.fillStyle = this.color;\r\n    this.ball.color = this.color;\r\n  }\r\n\r\n  drawBallLine() {\r\n    const {ctx} = Settings;\r\n    ctx.moveTo(this.x + this.width / 2, this.y + this.height);\r\n    ctx.lineTo(this.ball.x, this.ball.y);\r\n    ctx.strokeStyle = this.color;\r\n    ctx.stroke();\r\n  }\r\n\r\n  think() {\r\n    this.dna.genes[this.index] == 0 ? this.left() : this.right();\r\n  }\r\n\r\n  left() {\r\n    this.x > 0 ? this.x -= this.x_step : [];\r\n  }\r\n\r\n  right() {\r\n    this.x + this.width < canvasWidth ? this.x += this.x_step : [];\r\n  }\r\n\r\n  changeColor() {\r\n    let red = Math.floor(Math.random() * 3) * 127;\r\n    let green = Math.floor(Math.random() * 3) * 127;\r\n    let blue = Math.floor(Math.random() * 3) * 127;\r\n    return `rgba(${red}, ${green}, ${blue}, ${Math.random()}`;\r\n  }\r\n\r\n  control({key}) {\r\n    switch (key) {\r\n      case 'a':\r\n        this.left();\r\n        break;\r\n\r\n      case 'd':\r\n        this.right();\r\n        break;\r\n    }\r\n  }\r\n\r\n  getDNA() {\r\n    return this.dna;\r\n  }\r\n\r\n  start() {\r\n    if (!this.newGenes) this.dna.creatingGenes(this.lifeSpan);\r\n    this.drawPlayer();\r\n    //this.drawBallLine();\r\n    this.ball.start();\r\n    this.player_collision();\r\n    this.walls_collision();\r\n    this.think();\r\n    this.score++;\r\n    this.lifeSpan--;\r\n    this.index++;\r\n  }\r\n}\r\n\r\nexport default Player;"]}