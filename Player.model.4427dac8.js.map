{"version":3,"sources":["View/Settings.view.js","utils/getRandomNumber.util.js","Models/Player.model.js"],"names":["canvas","document","getElementById","width","window","innerWidth","height","innerHeight","Settings","gameContainer","canvasWidth","canvasHeight","ctx","getContext","getRandomNumber","len","Math","floor","random","Player","dna","newGenes","ball","id","lifeSpan","x","creatingGenes","y","x_step","color","changeColor","dead","index","lifes","score","ballHit","fitness","distanceFromBall","deathPenalty","abs","ROOF","y_speed","ballRadius","RIGHT_WALL","x_speed","LEFT_WALL","GROUND","calcFitness","beginPath","rect","fill","closePath","fillStyle","moveTo","lineTo","strokeStyle","stroke","genes","left","right","red","green","blue","key","drawPlayer","start","player_collision","walls_collision","think"],"mappings":"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","file":"Player.model.4427dac8.js","sourceRoot":"..","sourcesContent":["const canvas = document.getElementById('gameContainer');\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\nexport const Settings = {\n  gameContainer: document.getElementById('gameContainer'),\n  canvasWidth: canvas.width,\n  canvasHeight: canvas.height,\n  ctx: canvas.getContext('2d'),\n};\n","export const getRandomNumber = (len) => Math.floor(Math.random() * len);\n","import { Settings } from '../View/Settings.view';\nimport { getRandomNumber } from '../utils/getRandomNumber.util';\n\nconst { canvasWidth, canvasHeight } = Settings;\nclass Player {\n  constructor(dna, newGenes, ball) {\n    this.id = getRandomNumber(1);\n    this.lifeSpan = 2900;\n    if (newGenes) {\n      this.dna = dna;\n      this.newGenes = true;\n      this.x = 400;\n    } else {\n      this.dna = dna;\n      this.dna.creatingGenes(this.lifeSpan);\n      this.newGenes = false;\n      this.x = Math.floor(Math.random() * canvasWidth);\n    }\n\n    this.y = Settings.canvasHeight - 25;\n    this.x_step = 25;\n    this.height = 15;\n    this.width = canvasWidth / 6;\n    this.color = this.changeColor();\n\n    this.dead = false;\n    this.ball = ball;\n    this.index = 0;\n    this.lifes = 1;\n    this.score = 0;\n    this.ballHit = 0;\n    this.fitness = 0;\n    this.distanceFromBall = 0;\n    this.deathPenalty = 0;\n  }\n\n  calcFitness() {\n    this.distanceFromBall = Math.abs(this.distanceFromBall);\n    this.fitness =\n      (this.score * this.ballHit) / this.deathPenalty + this.distanceFromBall;\n  }\n\n  walls_collision() {\n    const ROOF = this.ball.y + this.ball.y_speed - this.ball.ballRadius < 0;\n    const RIGHT_WALL =\n      this.ball.x + this.ball.x_speed + this.ball.ballRadius > canvasWidth;\n    const LEFT_WALL =\n      this.ball.x + this.ball.x_speed - this.ball.ballRadius < 0;\n    const GROUND =\n      this.ball.y + this.ball.y_speed + this.ball.ballRadius > canvasHeight;\n\n    switch (true) {\n      case ROOF:\n        this.ball.y_speed = -this.ball.y_speed;\n        break;\n\n      case LEFT_WALL:\n        this.ball.x_speed = -this.ball.x_speed;\n        break;\n\n      case RIGHT_WALL:\n        this.ball.x_speed = -this.ball.x_speed;\n        break;\n\n      case GROUND:\n        this.ball.y_speed = -this.ball.y_speed;\n        this.lifes -= 1;\n        if (this.lifes === 0) {\n          this.dead = true;\n          this.calcFitness();\n        }\n    }\n  }\n\n  player_collision() {\n    if (\n      this.ball.y + this.ball.y_speed + this.ball.ballRadius >=\n        this.y + this.height &&\n      this.ball.x + this.ball.ballRadius < this.x + this.width &&\n      this.x < this.ball.x + this.ball.ballRadius\n    ) {\n      this.ball.y_speed = -this.ball.y_speed;\n      this.ballHit++;\n    }\n  }\n\n  drawPlayer() {\n    const { ctx } = Settings;\n    ctx.beginPath();\n    ctx.rect(this.x, canvasHeight - this.height, this.width, this.height);\n    ctx.fill();\n    ctx.closePath();\n    ctx.fillStyle = this.color;\n    this.ball.color = this.color;\n  }\n\n  drawBallLine() {\n    const { ctx } = Settings;\n    ctx.moveTo(this.x + this.width / 2, this.y + this.height);\n    ctx.lineTo(this.ball.x, this.ball.y);\n    ctx.strokeStyle = this.color;\n    ctx.stroke();\n  }\n\n  think() {\n    this.dna.genes[this.index] == 0 ? this.left() : this.right();\n  }\n\n  left() {\n    this.x > 0 ? (this.x -= this.x_step) : [];\n  }\n\n  right() {\n    this.x + this.width < canvasWidth ? (this.x += this.x_step) : [];\n  }\n\n  changeColor() {\n    let red = Math.floor(Math.random() * 3) * 127;\n    let green = Math.floor(Math.random() * 3) * 127;\n    let blue = Math.floor(Math.random() * 3) * 127;\n    return `rgba(${red}, ${green}, ${blue}, ${Math.random()}`;\n  }\n\n  control({ key }) {\n    switch (key) {\n      case 'a':\n        this.left();\n        break;\n\n      case 'd':\n        this.right();\n        break;\n    }\n  }\n\n  getDNA() {\n    return this.dna;\n  }\n\n  start() {\n    if (!this.newGenes) this.dna.creatingGenes(this.lifeSpan);\n    this.drawPlayer();\n    //this.drawBallLine();\n    this.ball.start();\n    this.player_collision();\n    this.walls_collision();\n    this.think();\n    this.score++;\n    this.lifeSpan--;\n    this.index++;\n  }\n}\n\nexport default Player;\n"]}